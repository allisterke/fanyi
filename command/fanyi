#!/bin/bash
if [[ $# -eq 0 ]]; then
    echo -e "usage:"
    echo -e "\t search: $(basename $0) <WORD> ..."
    echo -e "\t remove: $(basename $0) -r <WORD> ..."
    echo -e "\t memory: $(basename $0) -l [N]"
    exit 0
fi

hf=~/.fanyi_history
dir=~/.fanyi
remove=false

if [[ $1 == '-l' ]]; then
	shift
	n=${1:-1}
	words=($(cat $hf))
	for((i=0;i<n;++i)); do
		index=$((RANDOM % ${#words[*]}))
		$0 ${words[$index]}
	done
	exit $?
fi

if [[ $1 == "-r" ]]; then
    remove=true
    shift
fi

example() {
	(   echo let result=;
	    curl -s "http://www.iciba.com/index.php?a=getWordMean&c=search&list=1%2C2%2C3%2C4%2C5%2C8%2C9%2C10%2C12%2C13%2C14%2C15%2C18%2C21%2C22%2C24%2C3003%2C3004%2C3005&word=$1";
	    cat <<EOFXXX
;
let ex = [];

if(result.collins && result.collins[0]) {
    let entry = result.collins[0].entry;
    for(let i = 0; i < entry.length; ++ i) {
        for(let j = 0; j < entry[i].example.length; ++ j) {
            ex.push(entry[i].example[j].ex);
        }
    }
}

if(ex.length == 0 && result.sentence) {
    let sentence = result.sentence;
    for(let i = 0; i < sentence.length; ++ i) {
        ex.push(sentence[i].Network_en);
    }
}

for(let i = 0; i < ex.length; ++ i) {
    console.log((ex[i]));
}
EOFXXX
	) | node
}

translate() {
    word=${1,,} 
    if [[ -f $dir/$word ]]; then
        cat $dir/$word
        exit 0
    fi

    content=$(curl -s http://www.iciba.com/$1)
    p=$(echo "$content" | 
        grep -o -P '<span>[英|美] \[.*?\]</span>' | 
        sed -r 's/<\/?span>//g' | 
        tr '\n' '\f' | 
        sed 's/\f$/\n/' | 
        sed 's/\f/, /g')
    e=$(echo "$content" | 
        tr -d '\n' | 
        grep -P -o '<ul class="base-list switch_part".*?>.*?<\/ul>' | 
        grep -o -P '<li.*?li>' |
        sed -r 's/<\/?[a-z]+[^>]*>//g' | 
        sed -r 's/\s+/ /g')
    
    mkdir -p $dir
    if [[ -n "$p" || -n "$e" ]]; then
		ex=$(example $word | cat -n)
        (echo "$p"; echo "$e"; echo; echo "$ex") | tee $dir/$word
    fi
}

for word in $*; do
    word=${word,,}
    if $remove; then
        sed -r -i "/^$word$/ d" $hf
        rm -f $dir/$word
    else
        echo $word:
        result=$(translate $word)
        if [[ -n $result ]]; then
            while read -r line; do
                echo -e "\t$line"
            done < <(echo "$result")
    
            if [[ ! -f $hf ]] || ! grep "^$word$" $hf > /dev/null; then # save to history
                echo $word >> $hf
            fi
        fi
        echo
    fi
done 
